name: Deploy CloudFormation with Change Set

on:
  push:
    branches:
      - main

jobs:
  deploy:
    runs-on: ubuntu-latest

    env:
      STACK_NAME: MyS3BucketStack
      CHANGE_SET_NAME: GitChangeSet

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}

      - name: Create Change Set
        run: |
          aws cloudformation create-change-set \
            --stack-name $STACK_NAME \
            --template-body file://templates/my-s3-stack.yaml \
            --parameters ParameterKey=BucketName,ParameterValue=my-github-s3-cft-demo \
            --capabilities CAPABILITY_NAMED_IAM \
            --change-set-name $CHANGE_SET_NAME || true

      - name: Wait for Change Set
        run: |
          while true; do
            STATUS=$(aws cloudformation describe-change-set --stack-name $STACK_NAME --change-set-name $CHANGE_SET_NAME --query 'Status' --output text)
            if [ "$STATUS" = "CREATE_COMPLETE" ]; then
              echo "Change Set Ready."
              break
            elif [[ "$STATUS" == *FAILED* ]]; then
              echo "Change Set Failed. Sending notification."
              aws sns publish --topic-arn arn:aws:sns:${{ secrets.AWS_REGION }}:GitHubDeployment:9db87d01-a152-45b1-b33e-de76fdbe3bec --message "CloudFormation Change Set failed for $STACK_NAME"
              exit 1
            fi
            echo "Waiting for Change Set to be ready..."
            sleep 5
          done

      - name: Execute Change Set
        run: |
          aws cloudformation execute-change-set \
            --stack-name $STACK_NAME \
            --change-set-name $CHANGE_SET_NAME

      - name: Slack Notification Success
        if: success()
        uses: slackapi/slack-github-action@v1.24.0
        with:
          payload: |
            {
              "text": "âœ… CloudFormation stack $STACK_NAME successfully updated."
            }
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
